-- postgresql function to send event based on tables actions

CREATE OR REPLACE FUNCTION dg_metadata.notify_event()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$    DECLARE
        data json;
        notification json;

    BEGIN

        -- Convert the old or new row to JSON, based on the kind of action.
        -- Action = DELETE?             -> OLD row
        -- Action = INSERT or UPDATE?   -> NEW row
        IF (TG_OP = 'DELETE') THEN
            data = row_to_json(OLD);
        ELSE
            data = row_to_json(NEW);
        END IF;

        -- Contruct the notification as a JSON string.
        notification = json_build_object(
                          'table',TG_TABLE_NAME,
                          'action', TG_OP,
                          'data', data);


        -- Execute pg_notify(channel, notification)
        PERFORM pg_notify('events',notification::text);

        -- Result is ignored since this is an AFTER trigger
        RETURN NULL;
    END;

$function$


-- dg_metadata triggers

CREATE TRIGGER datastore_engine_notify_event
AFTER INSERT OR UPDATE OR DELETE ON dg_metadata.datastore_engine
    FOR EACH ROW EXECUTE PROCEDURE dg_metadata.notify_event();

CREATE TRIGGER database_schema_notify_event
AFTER INSERT OR UPDATE OR DELETE ON dg_metadata.database_schema
    FOR EACH ROW EXECUTE PROCEDURE dg_metadata.notify_event();

CREATE TRIGGER key_value_pair_notify_event
AFTER INSERT OR UPDATE OR DELETE ON dg_metadata.key_value_pair
    FOR EACH ROW EXECUTE PROCEDURE dg_metadata.notify_event();

CREATE TRIGGER file_table_notify_event
AFTER INSERT OR UPDATE OR DELETE ON dg_metadata.file_table
    FOR EACH ROW EXECUTE PROCEDURE dg_metadata.notify_event();

CREATE TRIGGER file_column_notify_event
AFTER INSERT OR UPDATE OR DELETE ON dg_metadata.file_column
    FOR EACH ROW EXECUTE PROCEDURE dg_metadata.notify_event();

CREATE TRIGGER sql_table_notify_event
AFTER INSERT OR UPDATE OR DELETE ON dg_metadata.sql_table
    FOR EACH ROW EXECUTE PROCEDURE dg_metadata.notify_event();

CREATE TRIGGER sql_column_notify_event
AFTER INSERT OR UPDATE OR DELETE ON dg_metadata.sql_column
    FOR EACH ROW EXECUTE PROCEDURE dg_metadata.notify_event();


